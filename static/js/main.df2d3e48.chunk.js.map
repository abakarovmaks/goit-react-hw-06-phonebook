{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Container/Container.module.css","Components/Container/Container.js","Components/Title/Title.js","redux/phoneBook/phoneBook-actions.js","Components/Notification/Notification.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Title","CSSTransition","in","appear","timeout","classNames","unmountOnExit","phoneBookActions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Notification","message","ContactForm","state","setMessage","note","setState","setTimeout","handleSubmit","e","preventDefault","props","contacts","find","item","toLowerCase","onSubmit","handleChange","target","value","this","form","input","type","placeholder","onChange","btn","Component","connect","phoneBook","dispatch","getFilteredContactsList","allContacts","filter","normalizedFilter","includes","onDelete","TransitionGroup","component","list","map","contact","onClick","aria-label","dispatsh","onChangeFilter","length","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phoneBookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phoneBookReducer","devTools","process","commonStore","persistor","persistStore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.df2d3e48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"input\":\"ContactForm_input__3dHde\",\"btn\":\"ContactForm_btn__tShh_\",\"container\":\"ContactForm_container__jcN59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2cE9S\",\"contact\":\"ContactList_contact__2n-Pp\",\"name\":\"ContactList_name__2vs56\",\"number\":\"ContactList_number__3h_Jg\",\"btn\":\"ContactList_btn__2-jnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3e1Mh\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './Title.css';\n\nconst Title = () => {\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames=\"Title-SlideIn\"\n      unmountOnExit\n    >\n      <h1 className=\"Title\">Phonebook</h1>\n    </CSSTransition>\n  );\n};\n\nexport default Title;\n","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst phoneBookActions = {\n  addContact,\n  deleteContact,\n  changeFilter,\n};\n\nexport default phoneBookActions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport './Notification.css';\n\nconst Notification = ({ message }) => {\n  return (\n    <CSSTransition\n      in={message}\n      timeout={250}\n      classNames=\"Notification-fade\"\n      unmountOnExit\n    >\n      <div className=\"Overlay\">\n        <p className=\"Notification\">{message}</p>\n      </div>\n    </CSSTransition>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport Notification from '../Notification/Notification';\n\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    message: null,\n  };\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func,\n  };\n\n  setMessage = (note) => {\n    this.setState({ message: note });\n    setTimeout(() => {\n      this.setState({ message: null });\n    }, 2500);\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    if (name === '') {\n      this.setMessage('Enter contact name, please!');\n      return;\n    }\n    if (number === '') {\n      this.setMessage('Enter concact phone, please!');\n      return;\n    }\n    if (\n      this.props.contacts.find(\n        (item) => item.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.setMessage('Contact already exists!');\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { name, number, message } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <Notification message={message} />\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label>\n            <input\n              className={styles.input}\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              placeholder=\"Name\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <input\n              className={styles.input}\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              placeholder=\"+380\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.phoneBook.contacts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(phoneBookActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport '../Fade/Fade.css';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          timeout={250}\n          classNames=\"List-slideIn\"\n          unmountOnExit\n        >\n          <li className={styles.contact}>\n            <span className={styles.name}>{name}</span>\n            <span className={styles.number}>{number}</span>\n            <button\n              className={styles.btn}\n              onClick={() => {\n                onDelete(id);\n              }}\n              aria-label=\"Удалить контакт\"\n            >\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  onDelete: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst getFilteredContactsList = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = ({ phoneBook: { contacts, filter } }) => ({\n  contacts: getFilteredContactsList(contacts, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(phoneBookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport './Filter.css';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Filter = ({ value, onChangeFilter, contacts }) => {\n  return (\n    <CSSTransition\n      in={contacts.length > 1}\n      timeout={250}\n      classNames=\"Filter-fade\"\n      unmountOnExit\n    >\n      <form className=\"form\">\n        <label>\n          <span className=\"title\">Find contacts by name</span>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={value}\n            onChange={onChangeFilter}\n          />\n        </label>\n      </form>\n    </CSSTransition>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.phoneBook.filter,\n  contacts: state.phoneBook.contacts,\n});\n\nconst mapDispatchToProps = (dispatsh) => ({\n  onChangeFilter: (e) =>\n    dispatsh(phoneBookActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Container from './Components/Container/Container';\nimport Title from './Components/Title/Title';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\n\nconst App = ({ contacts }) => {\n  return (\n    <Container>\n      <Title />\n\n      <ContactForm />\n\n      <Filter />\n\n      <CSSTransition in={contacts.length > 0} timeout={0} unmountOnExit>\n        <ContactList />\n      </CSSTransition>\n    </Container>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.phoneBook.contacts,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phoneBook-actions';\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phoneBookPersistConfig = {\n  key: 'phoneBook',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: persistReducer(phoneBookPersistConfig, phoneBookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst commonStore = {\n  store,\n  persistor,\n};\n\nexport default commonStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate persistor={store.persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}